services:

  resources:
    build:
      context: ./resources
    restart: on-failure
    ports:
      - "9010:9010"
    environment:
      BACKLOAD_DATA: "false"
      KIBANA_URL: ${KIBANA_URL}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      ELASTICSEARCH_USER: ${ELASTICSEARCH_USER}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
      OTEL_EXPORTER_OTLP_ENDPOINT_PLAYBACK_APM: "http://collector_playback:4318"
      OTEL_EXPORTER_OTLP_ENDPOINT_PLAYBACK_ELASTICSEARCH: "http://collector_playback:4319"
    depends_on:
      collector_playback:
        condition: service_started

  trader:
    build:
      context: ./src/trader/
    restart: on-failure
    healthcheck:
      test: curl --fail http://127.0.0.1:9001/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    ports:
      - "9001:9001"
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      OTEL_SERVICE_NAME: "trader"
      OTEL_RESOURCE_ATTRIBUTES: "service.version=1.0"

      OTEL_PYTHON_LOG_LEVEL: "info"
      OTEL_PYTHON_LOG_CORRELATION: "true"
      OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED: "true"
    depends_on:
      router:
        condition: service_healthy
      collector:
        condition: service_started

  monkey:
    build:
      context: ./src/monkey/
    restart: on-failure
    healthcheck:
      test: curl --fail http://127.0.0.1:9002/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    ports:
      - "9002:9002"
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      OTEL_SERVICE_NAME: "monkey"

      OTEL_PYTHON_LOG_LEVEL: "info"
      OTEL_PYTHON_LOG_CORRELATION: "true"
      OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED: "true"
    depends_on:
      trader:
        condition: service_healthy
      collector:
        condition: service_started

  router:
    build:
      context: ./src/router/
    restart: on-failure
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:9000/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    ports:
      - "9000:9000"
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
      OTEL_SERVICE_NAME: "router"

      RECORDER_HOST_1: "recorder-java"
      RECORDER_HOST_2: "recorder-go"
      RECORDER_HOST_CANARY: "recorder-go-zero"
    depends_on:
      recorder-go:
        condition: service_healthy
      recorder-java:
        condition: service_healthy
      collector:
        condition: service_started

  recorder-go:
    build:
      context: ./src/recorder-go/
    restart: on-failure
    volumes:
      - ./logs:/logs
    command: ["-logfile=/logs/recorder-go.json"]
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:9003/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      OTEL_SERVICE_NAME: "recorder-go"
  
      POSTGRES_HOST: "postgresql"
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "admin"
    depends_on:
      postgresql:
        condition: service_healthy
      collector:
        condition: service_started
      notifier:
        condition: service_healthy

  recorder-go-zero:
    build:
      context: ./src/recorder-go-zero/
    restart: on-failure
    volumes:
      - ./logs:/logs
      - /proc:/host/proc
    command: ["-logfile=/logs/recorder-go-zero.json"]
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:9003/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    environment:
      POSTGRES_HOST: "postgresql"
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "admin"
    depends_on:
      postgresql:
        condition: service_healthy
      collector:
        condition: service_started
      notifier:
        condition: service_healthy
    pid: "host"

  recorder-go-zero-ebpf:
    image: otel/autoinstrumentation-go
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4318"
      OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf"
      OTEL_SERVICE_NAME: "recorder-go-zero"
      OTEL_GO_AUTO_TARGET_EXE: "/recorder-zero"
      OTEL_PROPAGATORS: "tracecontext,baggage"
      OTEL_LOG_LEVEL: "debug"
      OTEL_GO_AUTO_INCLUDE_DB_STATEMENT: "true"
    volumes:
      - /proc:/host/proc
    depends_on:
      - recorder-go-zero
    privileged: true
    pid: "host"

  recorder-java:
    build:
      context: ./src/recorder-java/
    restart: on-failure
    healthcheck:
      test: curl --fail http://127.0.0.1:9003/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
      OTEL_SERVICE_NAME: "recorder-java"

      POSTGRES_HOST: "postgresql"
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "admin"
    depends_on:
      postgresql:
        condition: service_healthy
      collector:
        condition: service_started
      notifier:
        condition: service_healthy

  notifier:
    platform: "linux/amd64"
    build:
      context: ./src/notifier
    healthcheck:
      test: curl --fail http://127.0.0.1:5000/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    restart: on-failure
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4318"
      OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf"
      OTEL_SERVICE_NAME: "notifier"
      OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES: "Notifier"
      OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES: "Notifier"
    depends_on:
      collector:
        condition: service_started

  frontend:
    platform: "linux/amd64"
    build:
      context: ./src/frontend/
      args:
        ELASTIC_APM_SERVER_RUM_ENDPOINT: ${ELASTIC_APM_SERVER_RUM_ENDPOINT}
        ELASTIC_APM_SERVER_RUM_CREDENTIALS: ${ELASTIC_APM_SERVER_RUM_CREDENTIALS}

        KIBANA_URL: ${KIBANA_URL}
        ELASTICSEARCH_USER: ${ELASTICSEARCH_USER}
        ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
    ports:
      - '9394:80'
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      OTEL_SERVICE_NAME: "proxy"
    depends_on:
      monkey:
        condition: service_healthy
      trader:
        condition: service_healthy
      collector:
        condition: service_started

  instruqt_frontend:
    build:
      context: ./instruqt_frontend/
    ports:
      - '9393:80'
    depends_on:
      frontend:
        condition: service_started

  postgresql:
    image: postgres:latest
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "trades"
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "admin"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "trades", "-U", "admin" ]
      interval : 5s
      timeout : 5s
      retries : 5

  collector:
    image: docker.elastic.co/beats/elastic-agent:8.15.3
    restart: on-failure
    healthcheck:
      test: curl --fail http://127.0.0.1:13133/ || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    ports:
      - "4317:4317"
    volumes:
      - ./src/collector/collector.yml:/collector.yml
      - ./logs:/logs
      - ./resources/recorded:/recorded
      - /:/hostfs
    entrypoint: "/usr/share/elastic-agent/elastic-agent"
    command: ["otel", "-c", "/collector.yml"]
    environment:
      ELASTIC_AGENT_OTEL: "true"
      ELASTIC_APM_SERVER_ENDPOINT: ${ELASTIC_APM_SERVER_ENDPOINT}
      ELASTIC_APM_SERVER_SECRET: ${ELASTIC_APM_SERVER_SECRET}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      ELASTICSEARCH_APIKEY: ${ELASTICSEARCH_APIKEY}
    privileged: true
    pid: "host"
    user: root

  collector_playback:
    image: docker.elastic.co/beats/elastic-agent:8.15.3
    restart: on-failure
    healthcheck:
      test: curl --fail http://127.0.0.1:13133/ || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    ports:
      - "4318:4318"
      - "4319:4319"
    volumes:
      - ./src/collector/collector_playback.yml:/collector.yml
    entrypoint: "/usr/share/elastic-agent/elastic-agent"
    command: ["otel", "-c", "/collector.yml"]
    environment:
      ELASTIC_AGENT_OTEL: "true"
      ELASTIC_APM_SERVER_ENDPOINT: ${ELASTIC_APM_SERVER_ENDPOINT}
      ELASTIC_APM_SERVER_SECRET: ${ELASTIC_APM_SERVER_SECRET}
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      ELASTICSEARCH_APIKEY: ${ELASTICSEARCH_APIKEY}