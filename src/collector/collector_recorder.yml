receivers:
  otlp/fromsdk:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317

  filelog/recorder:
    # ingest app log (proprietary format)
    include: [ logs/recorder.log ]
    operators:
      # parse JSON logs from app
      - type: json_parser
        # conform timestamp
        timestamp:
          parse_from: attributes.timestamp
          layout_type: strptime
          location: UTC
          layout: '%Y-%m-%dT%H:%M:%SZ'
        # conform severity
        severity:
          parse_from: attributes.level
        # conform body
        body: attributes.message
        # conform trace meta
        trace:
          trace_id:
            parse_from: attributes.trace_id
          span_id:
            parse_from: attributes.span_id

      # service.name attribute needs to be on the resource
      - type: move
        from: attributes.service_name
        to: resource["service.name"]

      # clean up raw attributes parsed above
      - type: remove
        field: attributes.timestamp
      - type: remove
        field: attributes.level
      - type: remove
        field: attributes.message
      - type: remove
        field: attributes.trace_id
        if: attributes.trace_id != nil
      - type: remove
        field: attributes.span_id
        if: attributes.span_id != nil

exporters:
  file/apm:
    path: /recorded/apm.json
  file/elasticsearch:
    path: /recorded/elasticsearch.json

service:
  pipelines:
    traces/fromsdk:
      receivers: [otlp/fromsdk]
      exporters: [file/apm]

    metrics/fromsdk:
      receivers: [otlp/fromsdk]
      exporters: [file/apm]

    logs/fromsdk:
      receivers: [otlp/fromsdk]
      exporters: [file/apm]

    logs/recorder:
      receivers: [filelog/recorder]
      exporters: [file/elasticsearch]
